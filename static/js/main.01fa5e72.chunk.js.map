{"version":3,"sources":["redux/actions/actionTypes.js","redux/reducers/moviesReducer.js","redux/reducers/favouritesReducer.js","redux/reducers/rootReducer.js","redux/store/index.js","components/Header/index.jsx","redux/actions/actionCreators.js","components/Movies/Movie.jsx","components/Movies/List.jsx","components/Movies/index.jsx","components/Detail/MovieDetail.jsx","components/Detail/index.jsx","components/Favourites/index.jsx","components/SearchMovie/index.jsx","App.jsx","index.jsx"],"names":["moviesReducer","movies","action","type","actionTypes","favouritesReducer","favourites","updateFavourites","isFavouriteMovie","find","movie","id","filter","rootReducer","combineReducers","MoviesReducer","FavouritesReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","configureStore","initialState","createStore","applyMiddleware","thunk","Header","useState","searchedMovie","setSearchedMovie","history","useHistory","className","src","alt","to","placeholder","onChange","e","target","value","onClick","push","toLowerCase","toggleFavourites","Movie","movieId","showDetails","useSelector","store","dispatch","useDispatch","title","item","poster_path","overview","List","map","MoviesList","useEffect","a","axios","data","results","length","MovieDetail","release_date","Detail","movieSelected","setMovieSelected","useParams","Favourites","SearchMovie","infoMovieSearched","filteredMovies","includes","filterWithTitle","App","basename","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01fa5e72.chunk.js","sourcesContent":["export default {\r\n  ADD_TO_FAVORITES: 'ADD_TO_FAVORITES',\r\n  DELETE_MOVIE_FROM_FAVORITES: 'DELETE_MOVIE_FROM_FAVORITES',\r\n  LOAD_MOVIES: 'LOAD_MOVIES',\r\n  LOAD_MOVIES_ERROR: 'LOAD_MOVIES_ERROR'\r\n};\r\n","import actionTypes from '../actions/actionTypes';\r\n\r\nfunction moviesReducer(movies = [], action) {\r\n  switch (action.type) {\r\n    case actionTypes.LOAD_MOVIES:\r\n      return action.movies;\r\n\r\n    default:\r\n      return movies;\r\n  }\r\n}\r\n\r\nexport default moviesReducer;\r\n","/* eslint-disable no-case-declarations */\r\nimport actionTypes from '../actions/actionTypes';\r\n\r\nfunction favouritesReducer(favourites = [], action) {\r\n  let updateFavourites = [...favourites];\r\n  switch (action.type) {\r\n    case actionTypes.ADD_TO_FAVORITES:\r\n      const isFavouriteMovie = favourites.find((movie) => movie.id === action.movie.id);\r\n      if (isFavouriteMovie) {\r\n        updateFavourites = favourites.filter((movie) => movie.id !== action.movie.id);\r\n        return updateFavourites;\r\n      }\r\n      return [\r\n        ...updateFavourites,\r\n        action.movie\r\n      ];\r\n\r\n    default:\r\n      return updateFavourites;\r\n  }\r\n}\r\n\r\nexport default favouritesReducer;\r\n","import { combineReducers } from 'redux';\r\nimport MoviesReducer from './moviesReducer';\r\nimport FavouritesReducer from './favouritesReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  movies: MoviesReducer,\r\n  favourites: FavouritesReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst configureStore = (initialState) => createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default configureStore;\r\n","import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n  const [searchedMovie, setSearchedMovie] = useState('');\r\n  const history = useHistory();\r\n  const handleInput = (e) => {\r\n    setSearchedMovie(e.target.value);\r\n  };\r\n  const handleSearch = () => {\r\n    history.push(`/search/${searchedMovie.toLowerCase()}`);\r\n  };\r\n  return (\r\n    <header className=\"header\">\r\n      <nav className=\"header__navigation\">\r\n        <img className=\"header__navigation--logo\" src=\"https://i.postimg.cc/NjcqHPbp/icons8-movie-projector-100.png\" alt=\"MyFavouritosMovies\" />\r\n        <Link className=\"header__navigation--link\" to=\"/favourites\">\r\n          FAVOURITES\r\n        </Link>\r\n        <Link className=\"header__navigation--link\" to=\"/\">\r\n          LIST\r\n        </Link>\r\n      </nav>\r\n      <input type=\"text\" placeholder=\"Insert movie\" className=\"header__navigation--input\" onChange={handleInput} />\r\n      <button type=\"button\" className=\"header__navigation--button\" onClick={handleSearch}>\r\n        <img src=\"https://i.postimg.cc/J7XwkXXs/icons8-search-48.png\" alt=\"Search\" />\r\n      </button>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import axios from 'axios';\r\nimport actionTypes from './actionTypes';\r\n\r\nexport function loadMovies() {\r\n  return async (dispatch) => {\r\n    try {\r\n      const { data } = await axios('https://api.themoviedb.org/3/movie/popular?api_key=2cd571faf863b38d611ebf6905a846a1');\r\n      dispatch({\r\n        type: actionTypes.LOAD_MOVIES,\r\n        movies: data.results\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'LOAD_MOVIES_ERROR'\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nexport function toggleFavourites(movie) {\r\n  return {\r\n    type: actionTypes.ADD_TO_FAVORITES,\r\n    movie\r\n  };\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { toggleFavourites } from '../../redux/actions/actionCreators';\r\nimport './styles/movies.css';\r\n\r\nconst Movie = ({ movie, showDetails }) => {\r\n  const favourites = useSelector((store) => store.favourites);\r\n  const dispatch = useDispatch();\r\n  const handleFavourite = () => {\r\n    dispatch(toggleFavourites(movie));\r\n  };\r\n  const checkIsFavouriteMovie = (movieId) => favourites.find((item) => item.id === movieId);\r\n  return (\r\n    <li className=\"movie\">\r\n      <div className=\"movie__header\">\r\n        <h3>{movie.title}</h3>\r\n        <button type=\"button\" className=\"movie__button\" onClick={() => handleFavourite(movie)}>\r\n          <img\r\n            src={\r\n          checkIsFavouriteMovie(movie.id) ? (\r\n            'https://i.postimg.cc/MpWYzkxW/icons8-love-30.png'\r\n          ) : (\r\n            'https://i.postimg.cc/7ZM0G5B0/icons8-love-48.png'\r\n          )\r\n  }\r\n            alt=\"Favourite\"\r\n          />\r\n        </button>\r\n\r\n      </div>\r\n      <Link className=\"movie__link\" to={`/${movie.id}`}>\r\n        <img src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt={movie.title} />\r\n        {\r\n            showDetails && (\r\n              <p>{movie.overview}</p>\r\n            )\r\n          }\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nMovie.propTypes = {\r\n  showDetails: PropTypes.bool.isRequired,\r\n  movie: PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    poster_path: PropTypes.string.isRequired,\r\n    overview: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired\r\n  }).isRequired\r\n};\r\nexport default Movie;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Movie from './Movie';\r\nimport './styles/listMovies.css';\r\n\r\nconst List = ({ movies }) => (\r\n  <ul className=\"movie-list\">\r\n    {\r\n    movies.map((movie) => <Movie movie={movie} showDetails={false} />)\r\n        }\r\n  </ul>\r\n);\r\n\r\nList.propTypes = {\r\n  movies: PropTypes.shape([{\r\n    title: PropTypes.string.isRequired,\r\n    poster_path: PropTypes.string.isRequired,\r\n    overview: PropTypes.string.isRequired\r\n  }]).isRequired\r\n};\r\n\r\nexport default List;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport List from './List';\r\nimport { loadMovies } from '../../redux/actions/actionCreators';\r\nimport './styles/list.css';\r\n\r\nconst MoviesList = () => {\r\n  const movies = useSelector((store) => store.movies);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(loadMovies());\r\n  }, []);\r\n  return (\r\n    <section className=\"movie__list\">\r\n      <h3 className=\"movie__list--title\">List of all movies</h3>\r\n      <ul className=\"movie__list--movies\">\r\n        {\r\n          movies.length && (\r\n          <List movies={movies} />\r\n          )\r\n        }\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MoviesList;\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { toggleFavourites } from '../../redux/actions/actionCreators';\r\nimport './detail.css';\r\n\r\nconst MovieDetail = ({ movie }) => {\r\n  const favourites = useSelector((store) => store.favourites);\r\n  const dispatch = useDispatch();\r\n  const handleFavourite = () => {\r\n    dispatch(toggleFavourites(movie));\r\n  };\r\n  const checkIsFavouriteMovie = (movieId) => favourites.find((item) => item.id === movieId);\r\n  return (\r\n    <section className=\"movie-detail\">\r\n      <header className=\"movie-detail__header\">\r\n        <h3 className=\"movie-detail__header--title\">{movie.title}</h3>\r\n        <button type=\"button\" className=\"movie-detail__header--button\" onClick={() => handleFavourite(movie)}>\r\n          <img\r\n            src={\r\n          checkIsFavouriteMovie(movie.id) ? (\r\n            'https://i.postimg.cc/MpWYzkxW/icons8-love-30.png'\r\n          ) : (\r\n            'https://i.postimg.cc/7ZM0G5B0/icons8-love-48.png'\r\n          )\r\n  }\r\n            alt=\"Favourite\"\r\n          />\r\n        </button>\r\n      </header>\r\n      <section className=\"movie-detail__information\">\r\n        <img className=\"movie-detail__information--image\" src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt={movie.title} />\r\n        <div className=\"movie-detail__text\">\r\n          <p className=\"movie-detail__text--title\">Release date</p>\r\n          <p className=\"movie-detail__text--date\">{movie.release_date}</p>\r\n          <p className=\"movie-detail__text--title\">Description</p>\r\n          <p className=\"movie-detail__text--overview\">{movie.overview}</p>\r\n        </div>\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nMovieDetail.propTypes = {\r\n  movie: PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    poster_path: PropTypes.string.isRequired,\r\n    overview: PropTypes.string.isRequired,\r\n    release_date: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired\r\n  }).isRequired\r\n};\r\nexport default MovieDetail;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport MovieDetail from './MovieDetail';\r\n\r\nconst Detail = () => {\r\n  const [movieSelected, setMovieSelected] = useState();\r\n  const movies = useSelector((store) => store.movies);\r\n  const dispatch = useDispatch();\r\n  const { movieId } = useParams();\r\n  useEffect(() => {\r\n    if (movies.length) {\r\n      setMovieSelected(movies.find((movie) => movie.id === +movieId));\r\n    }\r\n  }, [movies]);\r\n  return (\r\n    <div>\r\n      {\r\n        movieSelected ? (\r\n          <MovieDetail movie={movieSelected} />\r\n        ) : (\r\n          <h3>Movie is not defined</h3>\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport List from '../Movies/List';\r\nimport './favourites.css';\r\n\r\nconst Favourites = () => {\r\n  const favourites = useSelector((store) => store.favourites);\r\n  return (\r\n    <section className=\"favourites\">\r\n      <h3 className=\"favourites__title\">My Favourites</h3>\r\n      <List movies={favourites} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Favourites;\r\n","/* eslint-disable max-len */\r\n/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport List from '../Movies/List';\r\n\r\nconst SearchMovie = () => {\r\n  const { infoMovieSearched } = useParams();\r\n  const movies = useSelector((store) => store.movies);\r\n  const filterWithTitle = (movie) => movie.title.toLowerCase().includes(infoMovieSearched);\r\n  const filteredMovies = movies.filter((movie) => filterWithTitle(movie));\r\n  return (\r\n    <>\r\n      <h3 className=\"title\">Your search</h3>\r\n      <List movies={filteredMovies} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchMovie;\r\n","import React from 'react';\nimport {\n  BrowserRouter, Switch, Route\n} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/store';\nimport Header from './components/Header';\nimport List from './components/Movies';\nimport Detail from './components/Detail';\nimport Favourites from './components/Favourites/index';\nimport SearchMovie from './components/SearchMovie';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Provider store={configureStore()}>\n      <BrowserRouter basename=\"https://jasuarez21.github.io/MyFavoriteMovies\">\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={List} />\n          <Route path=\"/favourites\" component={Favourites} />\n          <Route path=\"/search/:infoMovieSearched\" component={SearchMovie} />\n          <Route path=\"/:movieId\" component={Detail} />\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}